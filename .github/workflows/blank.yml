import random

class Puzzle:
    def __init__(self, size):
        self.size = size
        self.board = [[0 for x in range(size)] for y in range(size)]

        self.generate_puzzle()

    def generate_puzzle(self):
        # Generate a random starting position for the player

        self.player_x = random.randint(0, self.size - 1)
        self.player_y = random.randint(0, self.size - 1)

        # Generate a random goal position for the player

        self.goal_x = random.randint(0, self.size - 1)
        self.goal_y = random.randint(0, self.size - 1)

        # Fill the board with obstacles

        for x in range(self.size):
            for y in range(self.size):
                if random.random() > 0.5:
                    self.board[x][y] = 1

    def is_valid_move(self, x, y):
        if x < 0 or x >= self.size or y < 0 or y >= self.size:
            return False

        return self.board[x][y] == 0

    def move_player(self, direction):
        if direction == "up":
            self.player_y -= 1
        elif direction == "down":
            self.player_y += 1
        elif direction == "left":
            self.player_x -= 1
        elif direction == "right":
            self.player_x += 1

    def is_goal_reached(self):
        return self.player_x == self.goal_x and self.player_y == self.goal_y

    def print_board(self):
        for x in range(self.size):
            for y in range(self.size):
                if self.board[x][y] == 0:
                    print(" ", end="")
                elif self.board[x][y] == 1:
                    print("X", end="")
                else:
                    print("P", end="")
            print()

def main():
    size = 10
    puzzle = Puzzle(size)

    while True:
        puzzle.print_board()

        direction = input("Enter your move (up, down, left, right): ")
        if not puzzle.is_valid_move(direction):
            print("Invalid move!")
            continue

        puzzle.move_player(direction)

        if puzzle.is_goal_reached():
            print("You win!")
            break

if __name__ == "__main__":
    main()
    
